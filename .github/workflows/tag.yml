name: useaestrium/tag

on:
  push:
    tags:        
        - '*.*.*'
        - '[0-9]+.[0-9]+.[0-9]+'
        - '[0-9]+.[0-9]+.[0-9]+rc[0-9]+'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  tag:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [17]

    env:
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0

      # Setup .npmrc file to publish to GitHub Packages
      - name: Setup node env 🏗 and .npmrc file to publish to GitHub Packages
        uses: actions/setup-node@v2.4.1
        with:
          node-version: ${{ matrix.node }}
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file:
          scope: '@observerly'

      - name: Cache node_modules 📦
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install project dependencies 👨🏻‍💻
        run: yarn
        env:
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run vitest tests 🧪
        run: yarn test

      # Check the previous tag to the current tag
      - name: Set GITHUB_REF tag to the output
        id: set-tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Check GITHUB_REF tag is of correct '*.*.*' format
        id: check-tag
        run: |
          if [[ ${{ steps.set-tag.outputs.tag }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo ::set-output name=match::true
          fi

      # Ensure that the pushed tag updates the package.json version number
      - name: Update package.json version to GITHUB_REF tag
        if: steps.check-tag.outputs.match == 'true'
        env:
          RELEASE_VERSION: ${{ steps.set-tag.outputs.tag }}
        run: | 
          yarn version --new-version $RELEASE --no-git-tag-version
      
      # Commit the updated package.json file 
      - name: Commit package.json version
        if: steps.check-tag.outputs.match == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "chore: Bumped package.json version => ${{ steps.set-tag.outputs.tag }}" -a
    
      # Push the updated package.json file to the repository
      - name: Push package.json version
        if: steps.check-tag.outputs.match == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: "main"
          force_with_lease: true

      

      